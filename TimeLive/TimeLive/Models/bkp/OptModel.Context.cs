//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeLive.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OptEntities : DbContext
    {
        public OptEntities()
            : base("name=OptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<q_getdefinition> q_getdefinition { get; set; }
        public virtual DbSet<get_teammanager_options> get_teammanager_options { get; set; }
    
        public virtual ObjectResult<string> JvsLgCrptV1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("JvsLgCrptV1");
        }
    
        public virtual ObjectResult<string> JvsLgCrptV2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("JvsLgCrptV2");
        }
    
        public virtual int q_insert_intoex(string debug_msg)
        {
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_insert_intoex", debug_msgParameter);
        }
    
        public virtual int q_insert_intohrp(string debug_msg)
        {
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_insert_intohrp", debug_msgParameter);
        }
    
        public virtual int q_InsertSubProject(string companyid, string companyname, string customerresponsible, string projectid, string projectname, string subprojectid, string subprojectname)
        {
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_InsertSubProject", companyidParameter, companynameParameter, customerresponsibleParameter, projectidParameter, projectnameParameter, subprojectidParameter, subprojectnameParameter);
        }
    
        public virtual ObjectResult<q_SelectSubProject_Result> q_SelectSubProject(string customerresponsible, string companyid, string companyname, string projectid, string projectname, string subprojectid, string subprojectname)
        {
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<q_SelectSubProject_Result>("q_SelectSubProject", customerresponsibleParameter, companyidParameter, companynameParameter, projectidParameter, projectnameParameter, subprojectidParameter, subprojectnameParameter);
        }
    
        public virtual ObjectResult<q_spr_validateTime_Result> q_spr_validateTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<q_spr_validateTime_Result>("q_spr_validateTime");
        }
    
        public virtual int q_UpdateSubProject(string companyid, string companyname, string customerresponsible, string projectid, string projectname, string subprojectid, string subprojectname)
        {
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_UpdateSubProject", companyidParameter, companynameParameter, customerresponsibleParameter, projectidParameter, projectnameParameter, subprojectidParameter, subprojectnameParameter);
        }
    
        public virtual ObjectResult<SelectTime_Result> SelectTime(string companyid, string companyname, string customerresponsible, Nullable<bool> delayinvoice, Nullable<System.DateTime> eventdatefrom, Nullable<System.DateTime> eventdateto, string externalcomment, string externalpriocomment, string id, string internalcomment, Nullable<int> invoiceno, string projectid, string projectname, string signature, string subprojectid, string subprojectname)
        {
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var delayinvoiceParameter = delayinvoice.HasValue ?
                new ObjectParameter("delayinvoice", delayinvoice) :
                new ObjectParameter("delayinvoice", typeof(bool));
    
            var eventdatefromParameter = eventdatefrom.HasValue ?
                new ObjectParameter("eventdatefrom", eventdatefrom) :
                new ObjectParameter("eventdatefrom", typeof(System.DateTime));
    
            var eventdatetoParameter = eventdateto.HasValue ?
                new ObjectParameter("eventdateto", eventdateto) :
                new ObjectParameter("eventdateto", typeof(System.DateTime));
    
            var externalcommentParameter = externalcomment != null ?
                new ObjectParameter("externalcomment", externalcomment) :
                new ObjectParameter("externalcomment", typeof(string));
    
            var externalpriocommentParameter = externalpriocomment != null ?
                new ObjectParameter("externalpriocomment", externalpriocomment) :
                new ObjectParameter("externalpriocomment", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var internalcommentParameter = internalcomment != null ?
                new ObjectParameter("internalcomment", internalcomment) :
                new ObjectParameter("internalcomment", typeof(string));
    
            var invoicenoParameter = invoiceno.HasValue ?
                new ObjectParameter("invoiceno", invoiceno) :
                new ObjectParameter("invoiceno", typeof(int));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("signature", signature) :
                new ObjectParameter("signature", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectTime_Result>("SelectTime", companyidParameter, companynameParameter, customerresponsibleParameter, delayinvoiceParameter, eventdatefromParameter, eventdatetoParameter, externalcommentParameter, externalpriocommentParameter, idParameter, internalcommentParameter, invoicenoParameter, projectidParameter, projectnameParameter, signatureParameter, subprojectidParameter, subprojectnameParameter);
        }
    
        public virtual int UpdateTime(string companyid, string companyname, string customerresponsible, Nullable<bool> delayinvoice, Nullable<System.DateTime> eventdate, string externalcomment, string externalpriocomment, string id, string internalcomment, Nullable<decimal> invoicedtime, string projectid, string projectname, string signature, string subprojectid, string subprojectname, Nullable<decimal> usedtime)
        {
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var delayinvoiceParameter = delayinvoice.HasValue ?
                new ObjectParameter("delayinvoice", delayinvoice) :
                new ObjectParameter("delayinvoice", typeof(bool));
    
            var eventdateParameter = eventdate.HasValue ?
                new ObjectParameter("eventdate", eventdate) :
                new ObjectParameter("eventdate", typeof(System.DateTime));
    
            var externalcommentParameter = externalcomment != null ?
                new ObjectParameter("externalcomment", externalcomment) :
                new ObjectParameter("externalcomment", typeof(string));
    
            var externalpriocommentParameter = externalpriocomment != null ?
                new ObjectParameter("externalpriocomment", externalpriocomment) :
                new ObjectParameter("externalpriocomment", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var internalcommentParameter = internalcomment != null ?
                new ObjectParameter("internalcomment", internalcomment) :
                new ObjectParameter("internalcomment", typeof(string));
    
            var invoicedtimeParameter = invoicedtime.HasValue ?
                new ObjectParameter("invoicedtime", invoicedtime) :
                new ObjectParameter("invoicedtime", typeof(decimal));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("signature", signature) :
                new ObjectParameter("signature", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            var usedtimeParameter = usedtime.HasValue ?
                new ObjectParameter("usedtime", usedtime) :
                new ObjectParameter("usedtime", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTime", companyidParameter, companynameParameter, customerresponsibleParameter, delayinvoiceParameter, eventdateParameter, externalcommentParameter, externalpriocommentParameter, idParameter, internalcommentParameter, invoicedtimeParameter, projectidParameter, projectnameParameter, signatureParameter, subprojectidParameter, subprojectnameParameter, usedtimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> q_DeleteRowExpense(string q_hrp_guiid, string debug_msg)
        {
            var q_hrp_guiidParameter = q_hrp_guiid != null ?
                new ObjectParameter("q_hrp_guiid", q_hrp_guiid) :
                new ObjectParameter("q_hrp_guiid", typeof(string));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("q_DeleteRowExpense", q_hrp_guiidParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> q_DeleteRowTime(string q_hrp_guiid)
        {
            var q_hrp_guiidParameter = q_hrp_guiid != null ?
                new ObjectParameter("q_hrp_guiid", q_hrp_guiid) :
                new ObjectParameter("q_hrp_guiid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("q_DeleteRowTime", q_hrp_guiidParameter);
        }
    
        public virtual int q_InsertRowDistance(Nullable<System.DateTime> regdate, string perssign, Nullable<double> startingdistance, Nullable<double> workdistance, Nullable<double> privatedistance, Nullable<double> endingdistance, string comment, string debug_msg)
        {
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var startingdistanceParameter = startingdistance.HasValue ?
                new ObjectParameter("startingdistance", startingdistance) :
                new ObjectParameter("startingdistance", typeof(double));
    
            var workdistanceParameter = workdistance.HasValue ?
                new ObjectParameter("workdistance", workdistance) :
                new ObjectParameter("workdistance", typeof(double));
    
            var privatedistanceParameter = privatedistance.HasValue ?
                new ObjectParameter("privatedistance", privatedistance) :
                new ObjectParameter("privatedistance", typeof(double));
    
            var endingdistanceParameter = endingdistance.HasValue ?
                new ObjectParameter("endingdistance", endingdistance) :
                new ObjectParameter("endingdistance", typeof(double));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_InsertRowDistance", regdateParameter, perssignParameter, startingdistanceParameter, workdistanceParameter, privatedistanceParameter, endingdistanceParameter, commentParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<string> q_InsertRowExpense(string perssign, Nullable<int> projcode, string ftgnr, string artnr, Nullable<System.DateTime> regdate, Nullable<int> reimburse, Nullable<decimal> amount_excl_Vat, Nullable<decimal> vat_amount, string external_comment, string internal_comment, Nullable<double> qty, string valutakod, Nullable<double> valutakurs, string debug_msg)
        {
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var artnrParameter = artnr != null ?
                new ObjectParameter("artnr", artnr) :
                new ObjectParameter("artnr", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var reimburseParameter = reimburse.HasValue ?
                new ObjectParameter("reimburse", reimburse) :
                new ObjectParameter("reimburse", typeof(int));
    
            var amount_excl_VatParameter = amount_excl_Vat.HasValue ?
                new ObjectParameter("amount_excl_Vat", amount_excl_Vat) :
                new ObjectParameter("amount_excl_Vat", typeof(decimal));
    
            var vat_amountParameter = vat_amount.HasValue ?
                new ObjectParameter("vat_amount", vat_amount) :
                new ObjectParameter("vat_amount", typeof(decimal));
    
            var external_commentParameter = external_comment != null ?
                new ObjectParameter("external_comment", external_comment) :
                new ObjectParameter("external_comment", typeof(string));
    
            var internal_commentParameter = internal_comment != null ?
                new ObjectParameter("internal_comment", internal_comment) :
                new ObjectParameter("internal_comment", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(double));
    
            var valutakodParameter = valutakod != null ?
                new ObjectParameter("valutakod", valutakod) :
                new ObjectParameter("valutakod", typeof(string));
    
            var valutakursParameter = valutakurs.HasValue ?
                new ObjectParameter("valutakurs", valutakurs) :
                new ObjectParameter("valutakurs", typeof(double));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("q_InsertRowExpense", perssignParameter, projcodeParameter, ftgnrParameter, artnrParameter, regdateParameter, reimburseParameter, amount_excl_VatParameter, vat_amountParameter, external_commentParameter, internal_commentParameter, qtyParameter, valutakodParameter, valutakursParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<string> q_InsertRowTime(string perssign, Nullable<int> projcode, string subproject, string ftgnr, Nullable<System.DateTime> regdate, string editext, string editint, Nullable<double> invoicedtime, Nullable<double> usedtime, Nullable<int> delayinvoice, Nullable<int> highattention, string debug_msg)
        {
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var subprojectParameter = subproject != null ?
                new ObjectParameter("subproject", subproject) :
                new ObjectParameter("subproject", typeof(string));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var editextParameter = editext != null ?
                new ObjectParameter("editext", editext) :
                new ObjectParameter("editext", typeof(string));
    
            var editintParameter = editint != null ?
                new ObjectParameter("editint", editint) :
                new ObjectParameter("editint", typeof(string));
    
            var invoicedtimeParameter = invoicedtime.HasValue ?
                new ObjectParameter("invoicedtime", invoicedtime) :
                new ObjectParameter("invoicedtime", typeof(double));
    
            var usedtimeParameter = usedtime.HasValue ?
                new ObjectParameter("usedtime", usedtime) :
                new ObjectParameter("usedtime", typeof(double));
    
            var delayinvoiceParameter = delayinvoice.HasValue ?
                new ObjectParameter("delayinvoice", delayinvoice) :
                new ObjectParameter("delayinvoice", typeof(int));
    
            var highattentionParameter = highattention.HasValue ?
                new ObjectParameter("highattention", highattention) :
                new ObjectParameter("highattention", typeof(int));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("q_InsertRowTime", perssignParameter, projcodeParameter, subprojectParameter, ftgnrParameter, regdateParameter, editextParameter, editintParameter, invoicedtimeParameter, usedtimeParameter, delayinvoiceParameter, highattentionParameter, debug_msgParameter);
        }
    
        public virtual int q_InsertSubProject1(string companyid, string companyname, string customerresponsible, string projectid, string projectname, string subprojectid, string subprojectname)
        {
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_InsertSubProject1", companyidParameter, companynameParameter, customerresponsibleParameter, projectidParameter, projectnameParameter, subprojectidParameter, subprojectnameParameter);
        }
    
        public virtual ObjectResult<q_SelectRowsDistance_Result> q_SelectRowsDistance(string perssign, string debug_msg)
        {
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<q_SelectRowsDistance_Result>("q_SelectRowsDistance", perssignParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<q_SelectRowsExpense_Result> q_SelectRowsExpense(string perssign, Nullable<int> projcode, string ftgnr, string artnr, Nullable<System.DateTime> regdate, Nullable<System.DateTime> fromregdate, Nullable<System.DateTime> toregdate, Nullable<int> reimburse, string debug_msg)
        {
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var artnrParameter = artnr != null ?
                new ObjectParameter("artnr", artnr) :
                new ObjectParameter("artnr", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var fromregdateParameter = fromregdate.HasValue ?
                new ObjectParameter("fromregdate", fromregdate) :
                new ObjectParameter("fromregdate", typeof(System.DateTime));
    
            var toregdateParameter = toregdate.HasValue ?
                new ObjectParameter("toregdate", toregdate) :
                new ObjectParameter("toregdate", typeof(System.DateTime));
    
            var reimburseParameter = reimburse.HasValue ?
                new ObjectParameter("reimburse", reimburse) :
                new ObjectParameter("reimburse", typeof(int));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<q_SelectRowsExpense_Result>("q_SelectRowsExpense", perssignParameter, projcodeParameter, ftgnrParameter, artnrParameter, regdateParameter, fromregdateParameter, toregdateParameter, reimburseParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<q_SelectRowsTime_Result> q_SelectRowsTime(string customerresponsible, string perssign, Nullable<int> projcode, string projname, string subprojectid, string subprojectname, string ftgnr, string ftgnamn, Nullable<System.DateTime> regdate, Nullable<System.DateTime> fromregdate, Nullable<System.DateTime> toregdate, Nullable<int> delayinvoice, Nullable<int> highattention, string debug_msg, Nullable<int> numofrows)
        {
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var projnameParameter = projname != null ?
                new ObjectParameter("projname", projname) :
                new ObjectParameter("projname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var ftgnamnParameter = ftgnamn != null ?
                new ObjectParameter("ftgnamn", ftgnamn) :
                new ObjectParameter("ftgnamn", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var fromregdateParameter = fromregdate.HasValue ?
                new ObjectParameter("fromregdate", fromregdate) :
                new ObjectParameter("fromregdate", typeof(System.DateTime));
    
            var toregdateParameter = toregdate.HasValue ?
                new ObjectParameter("toregdate", toregdate) :
                new ObjectParameter("toregdate", typeof(System.DateTime));
    
            var delayinvoiceParameter = delayinvoice.HasValue ?
                new ObjectParameter("delayinvoice", delayinvoice) :
                new ObjectParameter("delayinvoice", typeof(int));
    
            var highattentionParameter = highattention.HasValue ?
                new ObjectParameter("highattention", highattention) :
                new ObjectParameter("highattention", typeof(int));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            var numofrowsParameter = numofrows.HasValue ?
                new ObjectParameter("numofrows", numofrows) :
                new ObjectParameter("numofrows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<q_SelectRowsTime_Result>("q_SelectRowsTime", customerresponsibleParameter, perssignParameter, projcodeParameter, projnameParameter, subprojectidParameter, subprojectnameParameter, ftgnrParameter, ftgnamnParameter, regdateParameter, fromregdateParameter, toregdateParameter, delayinvoiceParameter, highattentionParameter, debug_msgParameter, numofrowsParameter);
        }
    
        public virtual ObjectResult<q_SelectSubProject1_Result> q_SelectSubProject1(string customerresponsible, string companyid, string companyname, string projectid, string projectname, string subprojectid, string subprojectname)
        {
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<q_SelectSubProject1_Result>("q_SelectSubProject1", customerresponsibleParameter, companyidParameter, companynameParameter, projectidParameter, projectnameParameter, subprojectidParameter, subprojectnameParameter);
        }
    
        public virtual int q_UpdateRowDistance(Nullable<short> id, Nullable<System.DateTime> regdate, string perssign, Nullable<double> startingdistance, Nullable<double> workdistance, Nullable<double> privatedistance, Nullable<double> endingdistance, string comment, string debug_msg)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(short));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var startingdistanceParameter = startingdistance.HasValue ?
                new ObjectParameter("startingdistance", startingdistance) :
                new ObjectParameter("startingdistance", typeof(double));
    
            var workdistanceParameter = workdistance.HasValue ?
                new ObjectParameter("workdistance", workdistance) :
                new ObjectParameter("workdistance", typeof(double));
    
            var privatedistanceParameter = privatedistance.HasValue ?
                new ObjectParameter("privatedistance", privatedistance) :
                new ObjectParameter("privatedistance", typeof(double));
    
            var endingdistanceParameter = endingdistance.HasValue ?
                new ObjectParameter("endingdistance", endingdistance) :
                new ObjectParameter("endingdistance", typeof(double));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_UpdateRowDistance", idParameter, regdateParameter, perssignParameter, startingdistanceParameter, workdistanceParameter, privatedistanceParameter, endingdistanceParameter, commentParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> q_UpdateRowExpense(string q_hrp_guiid, string perssign, Nullable<int> projcode, string ftgnr, string artnr, Nullable<System.DateTime> regdate, Nullable<int> reimburse, Nullable<decimal> amount_excl_Vat, Nullable<decimal> vat_amount, string external_comment, string internal_comment, Nullable<double> qty, string valutakod, Nullable<double> valutakurs, string debug_msg)
        {
            var q_hrp_guiidParameter = q_hrp_guiid != null ?
                new ObjectParameter("q_hrp_guiid", q_hrp_guiid) :
                new ObjectParameter("q_hrp_guiid", typeof(string));
    
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var artnrParameter = artnr != null ?
                new ObjectParameter("artnr", artnr) :
                new ObjectParameter("artnr", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var reimburseParameter = reimburse.HasValue ?
                new ObjectParameter("reimburse", reimburse) :
                new ObjectParameter("reimburse", typeof(int));
    
            var amount_excl_VatParameter = amount_excl_Vat.HasValue ?
                new ObjectParameter("amount_excl_Vat", amount_excl_Vat) :
                new ObjectParameter("amount_excl_Vat", typeof(decimal));
    
            var vat_amountParameter = vat_amount.HasValue ?
                new ObjectParameter("vat_amount", vat_amount) :
                new ObjectParameter("vat_amount", typeof(decimal));
    
            var external_commentParameter = external_comment != null ?
                new ObjectParameter("external_comment", external_comment) :
                new ObjectParameter("external_comment", typeof(string));
    
            var internal_commentParameter = internal_comment != null ?
                new ObjectParameter("internal_comment", internal_comment) :
                new ObjectParameter("internal_comment", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(double));
    
            var valutakodParameter = valutakod != null ?
                new ObjectParameter("valutakod", valutakod) :
                new ObjectParameter("valutakod", typeof(string));
    
            var valutakursParameter = valutakurs.HasValue ?
                new ObjectParameter("valutakurs", valutakurs) :
                new ObjectParameter("valutakurs", typeof(double));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("q_UpdateRowExpense", q_hrp_guiidParameter, perssignParameter, projcodeParameter, ftgnrParameter, artnrParameter, regdateParameter, reimburseParameter, amount_excl_VatParameter, vat_amountParameter, external_commentParameter, internal_commentParameter, qtyParameter, valutakodParameter, valutakursParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> q_UpdateRowTime(string q_hrp_guiid, string perssign, Nullable<int> projcode, string subproject, string ftgnr, Nullable<System.DateTime> regdate, string editext, string editint, Nullable<double> invoicedtime, Nullable<double> usedtime, Nullable<int> delayinvoice, Nullable<int> highattention, string q_hrp_commentcust_prio, string q_hrp_subprojectid_prio, string debug_msg)
        {
            var q_hrp_guiidParameter = q_hrp_guiid != null ?
                new ObjectParameter("q_hrp_guiid", q_hrp_guiid) :
                new ObjectParameter("q_hrp_guiid", typeof(string));
    
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var subprojectParameter = subproject != null ?
                new ObjectParameter("subproject", subproject) :
                new ObjectParameter("subproject", typeof(string));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var editextParameter = editext != null ?
                new ObjectParameter("editext", editext) :
                new ObjectParameter("editext", typeof(string));
    
            var editintParameter = editint != null ?
                new ObjectParameter("editint", editint) :
                new ObjectParameter("editint", typeof(string));
    
            var invoicedtimeParameter = invoicedtime.HasValue ?
                new ObjectParameter("invoicedtime", invoicedtime) :
                new ObjectParameter("invoicedtime", typeof(double));
    
            var usedtimeParameter = usedtime.HasValue ?
                new ObjectParameter("usedtime", usedtime) :
                new ObjectParameter("usedtime", typeof(double));
    
            var delayinvoiceParameter = delayinvoice.HasValue ?
                new ObjectParameter("delayinvoice", delayinvoice) :
                new ObjectParameter("delayinvoice", typeof(int));
    
            var highattentionParameter = highattention.HasValue ?
                new ObjectParameter("highattention", highattention) :
                new ObjectParameter("highattention", typeof(int));
    
            var q_hrp_commentcust_prioParameter = q_hrp_commentcust_prio != null ?
                new ObjectParameter("q_hrp_commentcust_prio", q_hrp_commentcust_prio) :
                new ObjectParameter("q_hrp_commentcust_prio", typeof(string));
    
            var q_hrp_subprojectid_prioParameter = q_hrp_subprojectid_prio != null ?
                new ObjectParameter("q_hrp_subprojectid_prio", q_hrp_subprojectid_prio) :
                new ObjectParameter("q_hrp_subprojectid_prio", typeof(string));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("q_UpdateRowTime", q_hrp_guiidParameter, perssignParameter, projcodeParameter, subprojectParameter, ftgnrParameter, regdateParameter, editextParameter, editintParameter, invoicedtimeParameter, usedtimeParameter, delayinvoiceParameter, highattentionParameter, q_hrp_commentcust_prioParameter, q_hrp_subprojectid_prioParameter, debug_msgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> q_UpdateRowTimeTeam(string q_hrp_guiid, string perssign, Nullable<int> projcode, string subproject, string ftgnr, Nullable<System.DateTime> regdate, string editext, string editint, Nullable<double> invoicedtime, Nullable<double> usedtime, Nullable<int> delayinvoice, Nullable<int> highattention, string q_hrp_commentcust_prio, string q_hrp_subprojectid_prio, string debug_msg)
        {
            var q_hrp_guiidParameter = q_hrp_guiid != null ?
                new ObjectParameter("q_hrp_guiid", q_hrp_guiid) :
                new ObjectParameter("q_hrp_guiid", typeof(string));
    
            var perssignParameter = perssign != null ?
                new ObjectParameter("perssign", perssign) :
                new ObjectParameter("perssign", typeof(string));
    
            var projcodeParameter = projcode.HasValue ?
                new ObjectParameter("projcode", projcode) :
                new ObjectParameter("projcode", typeof(int));
    
            var subprojectParameter = subproject != null ?
                new ObjectParameter("subproject", subproject) :
                new ObjectParameter("subproject", typeof(string));
    
            var ftgnrParameter = ftgnr != null ?
                new ObjectParameter("ftgnr", ftgnr) :
                new ObjectParameter("ftgnr", typeof(string));
    
            var regdateParameter = regdate.HasValue ?
                new ObjectParameter("regdate", regdate) :
                new ObjectParameter("regdate", typeof(System.DateTime));
    
            var editextParameter = editext != null ?
                new ObjectParameter("editext", editext) :
                new ObjectParameter("editext", typeof(string));
    
            var editintParameter = editint != null ?
                new ObjectParameter("editint", editint) :
                new ObjectParameter("editint", typeof(string));
    
            var invoicedtimeParameter = invoicedtime.HasValue ?
                new ObjectParameter("invoicedtime", invoicedtime) :
                new ObjectParameter("invoicedtime", typeof(double));
    
            var usedtimeParameter = usedtime.HasValue ?
                new ObjectParameter("usedtime", usedtime) :
                new ObjectParameter("usedtime", typeof(double));
    
            var delayinvoiceParameter = delayinvoice.HasValue ?
                new ObjectParameter("delayinvoice", delayinvoice) :
                new ObjectParameter("delayinvoice", typeof(int));
    
            var highattentionParameter = highattention.HasValue ?
                new ObjectParameter("highattention", highattention) :
                new ObjectParameter("highattention", typeof(int));
    
            var q_hrp_commentcust_prioParameter = q_hrp_commentcust_prio != null ?
                new ObjectParameter("q_hrp_commentcust_prio", q_hrp_commentcust_prio) :
                new ObjectParameter("q_hrp_commentcust_prio", typeof(string));
    
            var q_hrp_subprojectid_prioParameter = q_hrp_subprojectid_prio != null ?
                new ObjectParameter("q_hrp_subprojectid_prio", q_hrp_subprojectid_prio) :
                new ObjectParameter("q_hrp_subprojectid_prio", typeof(string));
    
            var debug_msgParameter = debug_msg != null ?
                new ObjectParameter("debug_msg", debug_msg) :
                new ObjectParameter("debug_msg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("q_UpdateRowTimeTeam", q_hrp_guiidParameter, perssignParameter, projcodeParameter, subprojectParameter, ftgnrParameter, regdateParameter, editextParameter, editintParameter, invoicedtimeParameter, usedtimeParameter, delayinvoiceParameter, highattentionParameter, q_hrp_commentcust_prioParameter, q_hrp_subprojectid_prioParameter, debug_msgParameter);
        }
    
        public virtual int q_UpdateSubProject1(string companyid, string companyname, string customerresponsible, string projectid, string projectname, string subprojectid, string subprojectname)
        {
            var companyidParameter = companyid != null ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(string));
    
            var companynameParameter = companyname != null ?
                new ObjectParameter("companyname", companyname) :
                new ObjectParameter("companyname", typeof(string));
    
            var customerresponsibleParameter = customerresponsible != null ?
                new ObjectParameter("customerresponsible", customerresponsible) :
                new ObjectParameter("customerresponsible", typeof(string));
    
            var projectidParameter = projectid != null ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(string));
    
            var projectnameParameter = projectname != null ?
                new ObjectParameter("projectname", projectname) :
                new ObjectParameter("projectname", typeof(string));
    
            var subprojectidParameter = subprojectid != null ?
                new ObjectParameter("subprojectid", subprojectid) :
                new ObjectParameter("subprojectid", typeof(string));
    
            var subprojectnameParameter = subprojectname != null ?
                new ObjectParameter("subprojectname", subprojectname) :
                new ObjectParameter("subprojectname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("q_UpdateSubProject1", companyidParameter, companynameParameter, customerresponsibleParameter, projectidParameter, projectnameParameter, subprojectidParameter, subprojectnameParameter);
        }
    }
}
