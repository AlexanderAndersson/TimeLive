@using System.Globalization
@using Newtonsoft.Json
@model TimeLive.Models.ExpensesModel
@{
    Layout = "~/Views/Shared/_LayoutExpense.cshtml";
    var outstandingAmount = Model.Reimbursed;
    var selectRows = Model.SelectRows.OrderBy(x => x.regdate).ToArray();
    var dayDictionary = selectRows.Select(x => x.regdate).Distinct().ToDictionary(day => day, day => false);
    //var reimbursedStatus = selectRows.Select(x => x.ReimbursedStatus);
    //var reimbursedVoucherNo = selectRows.Select(x => x.ReimbursedVoucherNo);
    //var openOutAmount = selectRows.Select(x => x.ReimbursedStatus == "Open");
}

@*@foreach (var item in reimbursedStatus)
{

}

@foreach (var item in reimbursedVoucherNo)
{

}*@

<div class="row" id="miniFilterRow"> <!--FILTER FOR CHOOSING BETWEEN, TODAY, WEEK, MONTH & PMONTH-->
    <div id="miniFilter-container">
        <a href="#" id="quickToday" class="miniFilterAtag" style="text-decoration: none">
            <div id="miniFilter">
                <h2>TODAY</h2>
            </div>
        </a>
        <a href="#" id="quickCWeek" class="miniFilterAtag" style="text-decoration:none">
            <div id="miniFilter">
                <h6>Current</h6>
                <h2>WEEK</h2>
            </div>
        </a>
        <a href="#" id="quickCMonth" class="miniFilterAtag" style="text-decoration:none">
            <div id="miniFilter">
                <h6>Current</h6>
                <h2>MONTH</h2>
            </div>
        </a>
        <a href="#" id="quickLMonth" class="miniFilterAtag" style="text-decoration:none">
            <div id="miniFilter">
                <h6>Previous</h6>
                <h2>MONTH</h2>
            </div>
        </a>
    </div>
</div>
<div class="alert alert-info"><!--IF THERE IS NO MISSING HOURS, SHOW THIS-->
    <b>Outstanding amount</b>
</div>
@if (outstandingAmount > 0)
{
    <div class="alert alert-danger" id="outAmount">
        <p><b>@outstandingAmount.ToString("0.00")</b> SEK</p>
    </div>
}
else
{
    <div class="alert alert-success">
        There are no outstanding amount
    </div>
}
<div class="CurrentFilter"> <!--CURRENT FILTER WINDOW-->
    <table class="pTable">
        <tr id="tableCurrentFilter">
            <th colspan="2" class="CurrentFilterTitle"><b>Current Filter</b></th>
        </tr>
        <tr>
            <td class="tRow"><b>Customer</b></td>
            @if (Model.Selections.CustomerName == null) {
                <td class="tRow2">All</td>
            }
            else {
                <td class="tRow2">@Model.Selections.CustomerName</td>
            }

        </tr>
        <tr>
            <td class="tRow"><b>From</b></td>
            <td class="tRow2">@Model.Selections.From.Value.ToShortDateString()</td>
        </tr>
        <tr>
            <td class="tRow"><b>To</b></td>
            <td class="tRow2">@Model.Selections.To.Value.ToShortDateString()</td>
        </tr>
        <tr>
            <td class="tRow"><b>Reimburse</b></td>
            @if (Model.Selections.reimburse == null) {
                <td class="tRow2">All</td>
            }
            else {
                <td class="tRow2">Reimbursed</td>
            }
        </tr>
    </table>
</div>
<div class="Information"><!--INFORMATION WINDOW-->
    <table class="pTable">
        <tr id="tableInformation">
            <th colspan="2" class="InformationTitle"><b>Information</b></th>
        </tr>
        <tr>
            <td class="tRow">Alla belopp skall anges i <b>SEK.</b><br />
            Är det utländsk valuta, ange totalbeloppet, valutakod samt växelkurs i interna kommentaren.</td>
        </tr>
    </table>
</div>
<br />
<div id="titles"> <!--TITLES FOR REPORTS-->
    <div class="row row-header">
        <div class="col col-dropdown col-header">Customer</div>
        <div class="col col-dropdown col-header">Project</div>
        <div class="col col-dropdown col-header">Type</div>
        <div class="col col-date col-header">Date</div>
        <div class="col amount-head col-header">Qty</div>
        <div class="col amount-head col-header">Total</div>
        <div class="col amount-head col-header">VAT</div>
        <div class="col col-text col-header">External comment</div>
    </div>
</div>
<div class="rows"> <!--CREATED REPORTS-->
    @foreach (var row in selectRows)
    {
        <div class="expenseRow">
            @using (Html.BeginForm("Update", "Expenses", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="q_ex_guuid" class="q_ex_guuid" value="@row.q_ex_guuid" />
                @*<input type="hidden" name="valutakurs" value="@row.valutakurs" />*@
                <input type="hidden" name="reimburse" value="@row.ReimbursedStatus" />
                <div class="row">
                    <div class="col col-dropdown"> <!--CUSTOMER-->
                        <input type="hidden" class="companyId" name="pCompanyId" value="@row.companyid" />
                        <select class="form-control nopadding companyDropDown"></select>
                    </div>
                    <div class="col col-dropdown"> <!--PROJECT-->
                        <input type="hidden" class="projectId" value="@row.projectid" />
                        <select name="pProjectId" class="form-control projectDropDown"></select>
                    </div>
                    <div class="col col-type"> <!--TYPES-->
                        <input type="hidden" class="inputType" name="inputType" value="@row.artnr" />
                        <select name="pArtnr" class="form-control typeDropDown" value="@row.artnr">
                            <option value="100">Milersättning</option>
                            <option value="200">Boende</option>
                            <option value="300">Transporter</option>
                            <option value="400">Representation avdragsgill</option>
                            <option value="500">Mtrl kontoret</option>
                            <option value="505">Mtrl konsult</option>
                            <option value="510">Frukt etc</option>
                            <option value="515">Internet</option>
                            <option value="520">Porto</option>
                            <option value="530">Trängselskatt</option>
                            <option value="590">Övrigt</option>
                        </select>
                    </div>
                    <div class="col date"> <!--DATE-->
                        <input type="text" class="form-control date-picker date" name="pRegDate" value="@row.regdate.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="input-group col amount"> <!--QTY-->
                        <input type="text" class="form-control qty amount-ints" name="pQty" value="@row.qty" /> 
                    </div>
                    <div class="input-group col amount"> <!--TOTAL-->
                        <input type="text" class="form-control amount" name="pAmount_excl_Vat" value="@row.amount_excl_Vat.ToString("0.00").Replace(",",".")" /> 
                    </div>
                    <div class="input-group col amount"> <!--VAT-->
                        <input type="text" class="form-control amount" name="pVat_amount" value="@row.vat_amount.Value.ToString("0.00").Replace(",",".")" /> 
                    </div>
                    <div class="col externCom"> <!--EXTERNAL COMMENT-->
                        <input type="text" class="form-control comment" name="pExternComment" value="@row.comment_external" />
                    </div>
                    <label class="checkboxes"> <!--REIMBURSE-->
                        <input type="checkbox" class="reimChk hide" name="chkImb" @(row.reimburse == 1 ? "checked" : "") value="@row.reimburse" />
                        <input type="hidden" name="pReimburse" class="pReimburse" value="@row.reimburse" />
                        <img src="~/img/reimburse_false.png" class="image" />
                    </label>
                </div>
                <div class="row toggle" style="display: none;"> 
                    <div class="col col-full"> <!--INTERNAL COMMENT-->
                        <input type="text" class="form-control intComment comment" name="pInternComment" value="@row.comment_internal" />
                    </div>
                    <div class="btn-group-sm"> <!--UPDATE AND DELETE BUTTON-->
                        <button type="submit" id="btnSave" class="btn btn-success btn2" title="Update">
                            <span class="glyphicon glyphicon-floppy-disk"></span>
                            Update
                        </button>
                        <button type="button" class="btn btn-danger delete btn2" title="Delete">
                            <span class="glyphicon glyphicon-remove"></span>
                            Delete
                        </button>
                    </div>
                </div>
            }
        </div>
    }
</div>
@if (selectRows.Count() != 0)
{
    <br />
    <div class="row ">
        <div class="col col-header"> <!--NEW REPORT TITLE IF THERE IS EXISTING REPORTS ALREADY-->
            New Report
        </div>
    </div>
}
<div class="expenseRow">
    @using (Html.BeginForm("Insert", "Expenses", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col col-dropdown"> <!--COMPANY-->
                <input type="hidden" class="companyId" />
                <select name="pCompanyId" required class="form-control companyDropDown">
                    <option value="">Select Customer</option>
                </select>
            </div>
            <div class="col col-dropdown"> <!--PROJECT-->
                <select name="pProjectId" required class="form-control projectDropDown"></select>
            </div>
            <div class="col col-type"> <!--TYPE-->
                <select name="pArtnr" class="form-control">
                    <option value="100">Milersättning</option>
                    <option value="200">Boende</option>
                    <option value="300">Transporter</option>
                    <option value="400">Representation avdragsgill</option>
                    <option value="500">Mtrl kontoret</option>
                    <option value="505">Mtrl konsult</option>
                    <option value="510">Frukt etc</option>
                    <option value="515">Internet</option>
                    <option value="520">Porto</option>
                    <option value="530">Trängselskatt</option>
                    <option value="590">Övrigt</option>
                </select>
            </div>
            <div class="col date"> <!--DATE-->
                <input type="text" class="form-control date-picker" name="pRegDate" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
            </div>
            <div class="input-group col amount"> <!--QTY-->
                <input type="text" class="form-control qty amount-ints" name="pQty" value="0" /> 
            </div>
            <div class="input-group col amount"> <!--TOTAL-->
                <input type="text" class="form-control amount" name="pAmount_excl_Vat" value="0.00" /> 
            </div>
            <div class="input-group col amount"> <!--VAT-->
                <input type="text" class="form-control amount" name="pVat_amount" value="0.00" /> 
            </div>
            <div class="col externCom"> <!--EXTERNAL COMMENT-->
                <input type="text" required class="form-control comment" name="pExternComment" />
            </div>
            <label class="checkboxes"> <!--REIMBURSE-->
                <input type="checkbox" class="reimChk hide" checked />
                <input type="hidden" name="pReimburse" class="pReimburse" value="1" />
                <img src="~/img/reimburse_true.png" class="image" />
            </label>
        </div>
        <div class="row">
            <div class="col col-full2"> <!--INTERNAL COMMENT-->
                <input type="text" class="form-control intComment comment" name="pInternComment" placeholder="Internal comment" />
            </div>
            <div class="btn-group btn-group-sm"> <!--SAVE BUTTON-->
                <button type="submit" class="btn btn-primary btn2" title="Save">
                    <span class="glyphicon glyphicon-floppy-disk"></span>
                    Save
                </button>
            </div>
        </div>

    }
</div>

<link href="~/Content/ExpensesIndex.css" rel="stylesheet" />
<script src="~/Scripts/ExpensesFunctions.js"></script>
<script src="~/Scripts/funktions.js"></script>

<script type="text/javascript">

        var customers = @Html.Raw(JsonConvert.SerializeObject(Model.Customers));

        var projects = @Html.Raw(JsonConvert.SerializeObject(Model.Projects));

        @*var types = @Html.Raw(JsonConvert.SerializeObject(Model.Types))*@

        document.addEventListener("DOMContentLoaded", function() {

            function updateProjectDropDown(projectDropDown, companyId, projectId, clear) {
                clear = typeof clear !== "undefined" ? clear : true;
                if(clear) $(projectDropDown).html('');

                $(projects.filter(function(x) { return x.CustomerCode === companyId })).each(function(i, v) {
                    $(projectDropDown).append('<option value="' + v.Id + '" class="' +v.Status + '"' +  (v.Id===projectId ? ' selected' : '') + '>' + v.Description + '</option>');
                });
            }

            function updateProject(dropDown) {
                var row = $(dropDown).parent().parent();
                var companyId = $(dropDown).val();
                var projectId = $(row).find('.projectId').val();
                var projectDropDown = $(row).find('.projectDropDown');

                updateProjectDropDown(projectDropDown, companyId, projectId);
            }


            function updateProject(dropDown) {
                var row = $(dropDown).parent().parent();
                var companyId = $(dropDown).val();
                var projectId = $(row).find('.projectId').val();
                var projectDropDown = $(row).find('.projectDropDown');

                updateProjectDropDown(projectDropDown, companyId, projectId);
            }

            //Selected company changed
            $('.companyDropDown').change(function() {
                $(this).parent().parent().find('.companyId').val($(this).val());
                updateProject(this);
            });


            //Selected project change
            $('.projectDropDown').change(function() {
                $(this).parent().find('.projectId').val($(this).val());
            });

            //Deleting
            $('.delete').click(function() {
                var row = $(this).parents('.expenseRow');
                //__RequestVerificationToken
                var guiid = row.find('.q_ex_guuid').val();
                var token = row.find('input[name=__RequestVerificationToken]').val();
                $.post('@Url.Action("Delete")', { '__RequestVerificationToken': token, 'q_ex_guuid': guiid },
                    function(data) {
                        if (data.Result) {
                            row.hide(150);
                        } else {
                            //Todo: Display error message
                        }
                    }, 'json');
            });


            function populateCustomerDropDown(companyDropDown, companyId) {
                $(customers).each(function(i, val) {
                    $(companyDropDown).append('<option value="'+val.Code +'"'+ (val.Code === companyId ? ' selected' : '') +'>' + val.Name +'</option>');
                });
            }

            $('.expenseRow').each(function(k,v) {
                var companyId = $(v).find('.companyId').val();
                var companyDropDown = $(v).find('.companyDropDown');
                var projectDropDown = $(v).find('.projectDropDown');
                populateCustomerDropDown(companyDropDown,companyId);
                updateProject(companyDropDown);                
            });

            /* Selections */
            function updateSelectionDropDowns() {
                var customerDropDown = $('#selectionCompanyDropDown');
                var customerId = $('#selectionCompany').val();

                console.log(customerId);

                customerDropDown.append('<option value="">All</option>');
                populateCustomerDropDown(customerDropDown, customerId);
            }

            //Init
            updateSelectionDropDowns();

            $('#selectionCompanyDropDown').change(function() {
                $('#selectionCompany').val($(this).val());
                updateProjectDropDown($('#selectionProjectDropDown'), $(this).val());
                $('#selectionProjectDropDown').prepend('<option value="" selected>All</option>');
            });

        });
</script>
